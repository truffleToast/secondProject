/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2023-11-16 12:17:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.blog;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class edit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/eGovFrame-4.0.0/workspace.edu/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/day/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/eGovFrame-4.0.0/workspace.edu/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/day/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1612850415545L));
    _jspx_dependants.put("jar:file:/C:/eGovFrame-4.0.0/workspace.edu/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/day/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 response.addHeader("Access-Control-Allow-Origin", "*"); 
      out.write('\r');
      out.write('\n');
 response.setHeader("Access-Control-Allow-Headers", "orgin, x-requested-with, content-type, accept"); 
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>스케치 패드</title>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/fabric.js/4.5.1/fabric.min.js\"></script>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>    \r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("body {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#canvas-container {\r\n");
      out.write("    /* border: 1px solid #ccc; */\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    margin-top: 150px;\r\n");
      out.write("    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25); \r\n");
      out.write("    border-radius: 5px\r\n");
      out.write("}\r\n");
      out.write("#image-container {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    overflow-x: auto;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#bg-container {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    overflow-x: auto;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("#start-drawing-button img, #prev-button img , #next-button img , #reset-button img,\r\n");
      out.write("#photo-upload-button img, #bg-upload-button img, #text-button img \r\n");
      out.write("{\r\n");
      out.write("    max-width: 1.9rem; /* 원하는 크기로 조절 */\r\n");
      out.write("    /* max-height: 30px; */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* 상단바 css */\r\n");
      out.write("\r\n");
      out.write("/* .div-wrapper {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  height: 100%;\r\n");
      out.write("  max-width: 100%;\r\n");
      out.write("  /* max-height: 100%;\r\n");
      out.write("  heigth: auto;  \r\n");
      out.write("  background-color: #fffefd;\r\n");
      out.write("} */\r\n");
      out.write("\r\n");
      out.write(".view {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  /* width: 1920px; */\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  height: 96px;\r\n");
      out.write("  top: 0;\r\n");
      out.write("  left: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".overlap {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  height: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".group {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  height: 100%;\r\n");
      out.write("  top: 0;\r\n");
      out.write("  left: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".overlap-group {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  height: 100%;\r\n");
      out.write("  background-color: #fffefd;\r\n");
      out.write("  box-shadow: 0px 2px 12px #0000001a;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text-wrapper {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 19px;\r\n");
      out.write("  left: 60px;\r\n");
      out.write("  font-family: \"Noto Sans CJK KR-Bold\", Helvetica;\r\n");
      out.write("  font-weight: 700;\r\n");
      out.write("  color: #242424;\r\n");
      out.write("  font-size: 40px;\r\n");
      out.write("  letter-spacing: 0;\r\n");
      out.write("  line-height: normal;\r\n");
      out.write("  text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#head-div .div {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 34px;\r\n");
      out.write("  left: 259px;\r\n");
      out.write("  font-family: \"AppleSDGothicNeoB00-Regular\", Helvetica;\r\n");
      out.write("  font-weight: 400;\r\n");
      out.write("  color: #898989;\r\n");
      out.write("  font-size: 20px;\r\n");
      out.write("  letter-spacing: 0;\r\n");
      out.write("  line-height: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text-wrapper-2 {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 34px;\r\n");
      out.write("  left: 499px;\r\n");
      out.write("  font-family: \"AppleSDGothicNeoM00-Regular\", Helvetica;\r\n");
      out.write("  font-weight: 400;\r\n");
      out.write("  color: #fba21d;\r\n");
      out.write("  font-size: 20px;\r\n");
      out.write("  letter-spacing: 0;\r\n");
      out.write("  line-height: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".line {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 1px;\r\n");
      out.write("  height: 20px;\r\n");
      out.write("  top: 39px;\r\n");
      out.write("  left: 479px;\r\n");
      out.write("  object-fit: cover;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".group-wrapper {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 142px;\r\n");
      out.write("  height: 48px;\r\n");
      out.write("  top: 24px;\r\n");
      out.write("  left: 1718px;\r\n");
      out.write("  background-color: #fba21d;\r\n");
      out.write("  border-radius: 12px;\r\n");
      out.write("  box-shadow: 0px 0px 8px #0000001a;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".group-2 {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  width: 66px;\r\n");
      out.write("  height: 24px;\r\n");
      out.write("  top: 12px;\r\n");
      out.write("  left: 39px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#head-div .img {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 24px;\r\n");
      out.write("  height: 24px;\r\n");
      out.write("  top: 0;\r\n");
      out.write("  left: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text-wrapper-3 {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 2px;\r\n");
      out.write("  left: 38px;\r\n");
      out.write("  font-family: \"Noto Sans CJK KR-Bold\", Helvetica;\r\n");
      out.write("  font-weight: 700;\r\n");
      out.write("  color: #ffffff;\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  letter-spacing: 0;\r\n");
      out.write("  line-height: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".group-3 {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 155px;\r\n");
      out.write("  height: 48px;\r\n");
      out.write("  top: 24px;\r\n");
      out.write("  left: 1369px;\r\n");
      out.write("  background-color: #fffffd;\r\n");
      out.write("  border-radius: 12px;\r\n");
      out.write("  box-shadow: 0px 0px 8px #0000001a;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".group-4 {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  width: 92px;\r\n");
      out.write("  height: 24px;\r\n");
      out.write("  top: 12px;\r\n");
      out.write("  left: 32px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text-wrapper-4 {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 2px;\r\n");
      out.write("  left: 38px;\r\n");
      out.write("  font-family: \"Noto Sans CJK KR-Bold\", Helvetica;\r\n");
      out.write("  font-weight: 700;\r\n");
      out.write("  color: #363636;\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  letter-spacing: 0;\r\n");
      out.write("  line-height: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".group-5 {\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  width: 154px;\r\n");
      out.write("  height: 48px;\r\n");
      out.write("  top: 24px;\r\n");
      out.write("  left: 1544px;\r\n");
      out.write("  background-color: #fffffd;\r\n");
      out.write("  border-radius: 12px;\r\n");
      out.write("  box-shadow: 0px 0px 8px #0000001a;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".group-6 {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  width: 105px;\r\n");
      out.write("  height: 24px;\r\n");
      out.write("  top: 12px;\r\n");
      out.write("  left: 25px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* 편집 툴 css */\r\n");
      out.write("button#start-drawing-button,\r\n");
      out.write("button#prev-button,\r\n");
      out.write("button#next-button,\r\n");
      out.write("button#reset-button,\r\n");
      out.write("button#text-button {\r\n");
      out.write("\tborder: 0px;\r\n");
      out.write("\tbackground-color: white;\r\n");
      out.write("\tmargin: 0 1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#edit-tool {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".drwaing-tool {\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("\tflex-direction: row;\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\tmargin-top: 1.5em;\r\n");
      out.write("\tmargin-bottom: 1.5em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".line-color-div{\r\n");
      out.write("\tmargin-right: 1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".line-width-div{\r\n");
      out.write("\tmargin-left: 1em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*AI 이미지 제거 MODAL*/\r\n");
      out.write("\r\n");
      out.write(".imageEdit-modal{\r\n");
      out.write("\tdisplay:flex;\r\n");
      out.write("\talign-items: center;\r\n");
      out.write("\twidth: 33%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("    <header id=\"head-div\">    \r\n");
      out.write("\t      <div class=\"view\">\r\n");
      out.write("\t        <div class=\"overlap\">\r\n");
      out.write("\t          <div class=\"group\">\r\n");
      out.write("\t            <div class=\"overlap-group\">\r\n");
      out.write("\t              <div class=\"text-wrapper\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("//\">D.A.Y</a></div>\r\n");
      out.write("\t              <div class=\"div\">시즌이 지나고 나들이 🙄</div>\r\n");
      out.write("\t              <div class=\"text-wrapper-2\">16:9 1920px*1080px</div>\r\n");
      out.write("\t              <img class=\"line\" src=\"img/line-21.svg\" />\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t          </div>\r\n");
      out.write("\t          <div class=\"group-wrapper\">\r\n");
      out.write("\t            <div class=\"group-2\">\r\n");
      out.write("\t              <img class=\"img\" src=\"img/image.svg\" />\r\n");
      out.write("\t              <div class=\"text-wrapper-3\">등록</div>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t          </div>\r\n");
      out.write("\t          <button class=\"group-3\" id=\"save-jpg-button\">\r\n");
      out.write("\t            <div class=\"group-4\">\r\n");
      out.write("\t              <img class=\"img\" src=\"img/glyph-undefined.svg\" />\r\n");
      out.write("\t              <div class=\"text-wrapper-4\">내보내기</div>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t          </button>\r\n");
      out.write("\t          <div class=\"group-5\">\r\n");
      out.write("\t            <div class=\"group-6\">\r\n");
      out.write("\t              <img class=\"img\" src=\"img/glyph-undefined-3.svg\" />\r\n");
      out.write("\t              <div class=\"text-wrapper-4\">임시저장함</div>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t          </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t      </div>\r\n");
      out.write("      </header>\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"canvas-container\">\r\n");
      out.write("  <canvas id=\"main-canvas\" width=\"1000\" height=\"600\"></canvas>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  \r\n");
      out.write("  <br>\r\n");
      out.write("  <!-- Nav tabs -->\r\n");
      out.write("  <ul class=\"nav nav-tabs justify-content-center\" role=\"tablist\">\r\n");
      out.write("    <li class=\"nav-item\">\r\n");
      out.write("      <a class=\"nav-link active text-danger font-weight-bold\" data-toggle=\"tab\" href=\"#home\">사진</a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li class=\"nav-item\">\r\n");
      out.write("      <a class=\"nav-link text-warning font-weight-bold\" data-toggle=\"tab\" href=\"#menu1\">배경</a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li class=\"nav-item\">\r\n");
      out.write("      <a class=\"nav-link text-info font-weight-bold\" data-toggle=\"tab\" href=\"#menu2\">스티커</a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li class=\"nav-item\">\r\n");
      out.write("      <a class=\"nav-link text-success font-weight-bold\" data-toggle=\"tab\" href=\"#menu3\">그리기</a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li class=\"nav-item\">\r\n");
      out.write("      <a class=\"nav-link text-primary font-weight-bold\" data-toggle=\"tab\" href=\"#menu4\">A.I</a>\r\n");
      out.write("    </li>\r\n");
      out.write("  </ul>\r\n");
      out.write("\r\n");
      out.write("  <!-- Tab panes -->\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  <div class=\"tab-content\">\r\n");
      out.write("    <div id=\"home\" class=\"container tab-pane active\"><br>\r\n");
      out.write("      \t<div id=\"image-container\">\r\n");
      out.write("      \t    <div id=\"photo-upload-button\">\r\n");
      out.write("\t\t      <img class=\"add-undefined-glyph\" src=\"img/glyph-undefined.svg\" alt=\"업로드\" />\r\n");
      out.write("\t\t      <div class=\"text-wrapper\">사진<br />가져오기</div>\r\n");
      out.write("\t\t    </div>\r\n");
      out.write("\r\n");
      out.write("    \t\t<input type=\"file\" id=\"image-upload\" multiple=\"multiple\" accept=\"image/*\" style= \"display: none;\">\t\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"menu1\" class=\"container tab-pane fade\"><br>\r\n");
      out.write("\t   \r\n");
      out.write("\t   <div id=\"bg-container\">\r\n");
      out.write("\t    \t<div id=\"bg-upload-button\">\r\n");
      out.write("\t\t\t  <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/editor/upload.png\" alt=\"업로드\"><h5>업로드</h5>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t    <input type=\"file\" id=\"background-upload\" multiple=\"multiple\" accept=\"image/*\" style= \"display: none;\">\r\n");
      out.write("\t    \t\r\n");
      out.write("\t  </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <div id=\"menu2\" class=\"container tab-pane fade\"><br>\r\n");
      out.write("      <h3>스티커</h3>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"menu3\" class=\"container tab-pane fade\"><br>\r\n");
      out.write("      <div id=\"edit-tool\">\r\n");
      out.write("\t\t  <button id=\"prev-button\">\r\n");
      out.write("\t\t    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/editor/prev.png\" alt=\"이전으로\">\r\n");
      out.write("\t\t  </button>\r\n");
      out.write("\t\t  <button id=\"next-button\">\r\n");
      out.write("\t\t    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/editor/next.png\" alt=\"다음으로\">\r\n");
      out.write("\t\t  </button>\r\n");
      out.write("\t\t  <button id=\"reset-button\">\r\n");
      out.write("\t\t    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/editor/reset.png\" alt=\"초기화\">\r\n");
      out.write("\t\t  </button>\r\n");
      out.write("\t      <button id=\"start-drawing-button\">\r\n");
      out.write("\t\t    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/editor/pencil.png\" alt=\"그리기 모드 시작\">\r\n");
      out.write("\t\t  </button>\r\n");
      out.write("\t\t  <button id=\"text-button\">\r\n");
      out.write("\t\t    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/editor/txt.png\" alt=\"텍스트\">\r\n");
      out.write("\t\t  </button>\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  <div class=\"collapse\" id=\"drawing-options\">\r\n");
      out.write("\t\t  \t<div class=\"drwaing-tool\">\r\n");
      out.write("\t\t\t  <div class=\"line-color-div\"><input type=\"color\" id=\"line-color\" value=\"#000000\"></div>\r\n");
      out.write("\t\t\t  <div class=\"line-width-div\"><input type=\"range\" id=\"line-width\" min=\"1\" max=\"10\" value=\"2\"></div>\r\n");
      out.write("\t\t\t  <div class=\"controls__btns\">\r\n");
      out.write("\t\t\t\t  <button id=\"jsErase\">지우개</button>\r\n");
      out.write("\t\t\t\t  <input type=\"range\" id=\"jsRange\" min=\"0.1\" max=\"20.0\" step=\"0.1\"/>\r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("\t\t  \t</div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t  \r\n");
      out.write("<!-- \t\t  <label for=\"font-family\">글꼴 선택:</label>\r\n");
      out.write("\t\t    <select id=\"font-family\">\r\n");
      out.write("\t\t        <option value=\"Arial\">Arial</option>\r\n");
      out.write("\t\t        <option value=\"Times New Roman\">Times New Roman</option>\r\n");
      out.write("\t\t        <option value=\"Courier New\">Courier New</option>\r\n");
      out.write("\t\t        <option value=\"Georgia\">Georgia</option>\r\n");
      out.write("\t\t    </select> -->\r\n");
      out.write("      </div>    \r\n");
      out.write("    </div>\r\n");
      out.write("    <div id=\"menu4\" class=\"container tab-pane fade\"><br>\r\n");
      out.write("      <h3>A.I</h3>\r\n");
      out.write("      <h3>배경 제거, 이미지 생성, AI 지우개 등을 체험해보세요</h3>\r\n");
      out.write("      <button id=\"ai-edit__btn\">AI기능 사용하기</button>\r\n");
      out.write("      \r\n");
      out.write("    \r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("<div class =\"imageEdit-modal__wrap\">\r\n");
      out.write("\t <!-- 이미지 편집 플라스크 -->\r\n");
      out.write("       <div class=\"ai-imgEdit\">\r\n");
      out.write("      <!-- removeBg -->\r\n");
      out.write("         <div class=\"imageEdit-removeBg\">\r\n");
      out.write("            <span class=\"imageEdit-removeBg__span\">배경 제거</span>\r\n");
      out.write("            <form id=\"imageEdit-removeBg__form\" \r\n");
      out.write("            method= \"post\" enctype =\"multipart/form-data\">\r\n");
      out.write("               <input type =\"file\" name =\"myfile\" class=\"imageUpload\" accept =\"image/*\" >\r\n");
      out.write("               <input type =\"submit\" id=\"imageEdit-removeBg__sub\" value=\"배경제거하기\">\r\n");
      out.write("            </form>\r\n");
      out.write("         </div>\r\n");
      out.write("      <!-- imageGenerator 생성(Kalo)-->\r\n");
      out.write("         <div class=\"imageEdit-makeImg\">\r\n");
      out.write("            <span class =\"imageEdit-makeImg__span\">이미지 생성</span>\r\n");
      out.write("            \t<form id =\"imageEdit-makeImg__form\" method =\"post\">\r\n");
      out.write("               <h6>구체적으로 작성하여 주시고, 영어로 작성해주세요</h6>\r\n");
      out.write("               <input type =\"text\" name =\"prompt\" placeholder=\"생성할 이미지의 텍스트를 입력해주세요\"><!-- 생성할 이미지 텍스트 --><br>\r\n");
      out.write("               <span class =\"makeImg-style\">원하는 스타일</span>\r\n");
      out.write("               <select name=\"art_style\" id=\"art_style\">\r\n");
      out.write("                  <option value=\"\">선택 안함</option>\r\n");
      out.write("                  <option value=\"by Renoir\">르누아르 스타일</option>\r\n");
      out.write("                  <option value=\"by Picasso\">피카소 스타일</option>\r\n");
      out.write("                  <option value=\"by Gogh\">고흐 스타일</option>\r\n");
      out.write("                  <option value=\"Anime\">애니메이션 스타일</option>\r\n");
      out.write("                  <option value=\"cartoon\">카툰 스타일</option>\r\n");
      out.write("               </select>\r\n");
      out.write("               <br>\r\n");
      out.write("               <input type =\"text\" name =\"negative_prompt\"> <!-- 이미지에서 생성하고 싶지 않은 요소 -->\r\n");
      out.write("               <span>- 생성시 제거할 요소</span>\r\n");
      out.write("               <input type =\"submit\" id=\"imageEdit-makeImg__sub\" value=\"이미지 생성하기\">\r\n");
      out.write("            \t</form>\r\n");
      out.write("         \t</div>\r\n");
      out.write("         </div>\r\n");
      out.write("\t<div class= \"imageEdit-modal imageEdit-modal__aiEraser\">\r\n");
      out.write("\t   <!-- 사용자가 이미지를 업로드할 수 있도록 input 태그 추가 -->\r\n");
      out.write("\t   <input type=\"file\" class=\"imageUpload\" accept=\"image/*\">\r\n");
      out.write("\t   <img id=\"modal-userImg__unerased\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cpath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/header-bg.jpg\" onclick= \"findPoint(event)\" style=\"display: none;\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class= \"imageEdit-modal imageEdit-modal__removeBg\">\r\n");
      out.write("\t   <img id= \"basic_image__remBg\" src=\"\" alt=\"기본 이미지\"> <!--흰색만 있거나 투명한 이미지 하나가져와서 띄우기-->\r\n");
      out.write("\t   <span>배경 제거 이미지 테스트</span>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class =\"imageEdit-modal imageEdit-modal__makedImg\">\r\n");
      out.write("\t   <img id= \"basic_image__makeImg\" src=\"\" alt=\"기본 이미지\"> <!--흰색만 있거나 투명한 이미지 하나가져와서 띄우기-->\r\n");
      out.write("\t   <span>만들어진 이미지 테스트</span> \r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/fabric.js/4.5.0/fabric.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script> \t\r\n");
      out.write("//ajax\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("    //사진올리면 보이게 하기\r\n");
      out.write("\t$(\".imageUpload\").change(function(){\r\n");
      out.write("    var reader = new FileReader();\r\n");
      out.write("    reader.onload = function(e){\r\n");
      out.write("        $(\"#modal-userImg__unerased\").attr('src', e.target.result).show(); // ID 수정: UnerasedImg -> modal-userImg__unerased\r\n");
      out.write("    }\r\n");
      out.write("    reader.readAsDataURL(this.files[0]);\r\n");
      out.write("});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t// 이미지 배경 제거 기능 처리\r\n");
      out.write("    $(\"#imageEdit-removeBg__form\").on('submit',function(e){\t\r\n");
      out.write("        e.preventDefault(); // 폼 제출 기본 이벤트 방지\r\n");
      out.write("        var removeBg_fData = new FormData(this); // 폼 데이터 생성\t        \r\n");
      out.write("      \tconsole.log(removeBg_fData); \r\n");
      out.write("      \t\r\n");
      out.write("        // AJAX 요청 설정 및 전송\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:'http://localhost:5000/removeBg', // 요청 URL\r\n");
      out.write("            type: \"post\", // HTTP 요청 방식\r\n");
      out.write("            enctype: \"multipart/form-data\",\r\n");
      out.write("            cache:false,\r\n");
      out.write("            data: removeBg_fData, // 전송할 데이터\r\n");
      out.write("            contentType: false, // 컨텐트 타입 설정 방지\r\n");
      out.write("            processData: false, // 데이터를 쿼리 문자열로 변환 방지\r\n");
      out.write("            success: function(data) { // 요청 성공 시 처리할 함수\r\n");
      out.write("                uploadRemovedImg(data);// 배경이 제거된 이미지 업로드 함수 호출\r\n");
      out.write("            },\r\n");
      out.write("            error: function(xhr, status, error){ // 요청 실패 시 처리할 함수\r\n");
      out.write("                alert('Error: ' + error); // 오류 메시지 표시\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 텍스트 기반 이미지 생성 기능 처리\r\n");
      out.write("    $(\"#imageEdit-makeImg__form\").on('submit',function(e){\r\n");
      out.write("        e.preventDefault(); // 폼 제출 기본 이벤트 방지\r\n");
      out.write("        var promptValue = $(\"input[name='prompt']\").val(); // name이 prompt인 input\r\n");
      out.write("        var styleValue = $(\"#art_style option:selected\").val(); //art스타일에서 선택된 것의 밸류\r\n");
      out.write("        //삼항연산자로 처리\r\n");
      out.write("        var combinedPrompt = promptValue + (styleValue ? \", \" + styleValue : \"\");\r\n");
      out.write("        \r\n");
      out.write("        var makeImg_fData = new FormData(this);\r\n");
      out.write("        makeImg_fData.set(\"prompt\", combinedPrompt); // 보낼 객체를 저 결합한 데이터를 바탕으로 처리\r\n");
      out.write("\r\n");
      out.write("        // AJAX 요청 설정 및 전송\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:'http://localhost:5000/makeImg', // 요청 URL\r\n");
      out.write("            type: \"post\", // HTTP 요청 방식\r\n");
      out.write("            data: makeImg_fData, // 전송할 데이터\r\n");
      out.write("            contentType: false, // 컨텐트 타입 설정 방지\r\n");
      out.write("            processData: false, // 데이터를 쿼리 문자열로 변환 방지\r\n");
      out.write("            \r\n");
      out.write("            success: function(data){ \r\n");
      out.write("            \tuploadMakedImg(data)\r\n");
      out.write("            },\r\n");
      out.write("            error: function(xhr, status, error){ // 요청 실패 시 처리할 함수\r\n");
      out.write("                alert('Error: ' + error); // 오류 메시지 표시\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("   \t\t// AI 지우개 기능\r\n");
      out.write("      var UnerasedImg = $(\"#modal-userImg__unerased\") // UnerasedImg는 유저가 올릴 사진\r\n");
      out.write("      var clickX, clickY; // 클릭 위치 저장을 위한 전역 변수\r\n");
      out.write("      \r\n");
      out.write("     \r\n");
      out.write("      \r\n");
      out.write("      // 이미지와 위치 데이터를 서버에 전송\r\n");
      out.write("      $(\"#imageEdit-removeBg__form\").on(\"submit\",function(e){\r\n");
      out.write("    \t  e.preventDefault(); // 폼 제출 기본 이벤트 방지\r\n");
      out.write("      \tvar formData = new FormData(this);\r\n");
      out.write("        formData.append('image', $(\"#imageUpload\")[0].files[0]);\r\n");
      out.write("        formData.append('x', clickX);\r\n");
      out.write("        formData.append('y', clickY);\r\n");
      out.write("        $.ajax({   \r\n");
      out.write("            url:\"http://localhost:5000/remove_object\", //요청 url remove_object으로 보내고\r\n");
      out.write("            type: \"post\",\r\n");
      out.write("            enctype: \"multipart/form-data\",\r\n");
      out.write("            data: formData,\r\n");
      out.write("            processData: false,\r\n");
      out.write("            contentType: false,\r\n");
      out.write("            success: function(data){\r\n");
      out.write("           \t uploadErasedImg(data);\r\n");
      out.write("            },\r\n");
      out.write("            error: alert(\"Error\")\r\n");
      out.write("            \r\n");
      out.write("         });\r\n");
      out.write("        \r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 배경이 제거된 이미지를 모달에 표시하는 함수\r\n");
      out.write("function uploadRemovedImg(data){\r\n");
      out.write("   console.log(data)\r\n");
      out.write("   var imageUrl = data.image_url;\r\n");
      out.write("    $(\".imageEdit-modal__removeBg\").append('<img id=\"bg-removedImg\" src=\"'+imageUrl+'\" />');\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 생성된 이미지를 모달에 표시하는 함수 -> 기본 이미지의 href를 바꿔주기\r\n");
      out.write("function uploadMakedImg(data){\r\n");
      out.write("   \tconsole.log(data);   \r\n");
      out.write("    var makedImg = data.image_url; //image_url로 할것\r\n");
      out.write("    console.log(makedImg); //이미지 url 확인\r\n");
      out.write("    $('#basic_image__makeImg').attr('src', makedImg); //src 변경하기\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("function uploadErasedImg(data){\t\r\n");
      out.write("\tvar erasedImg = data.image_url;\r\n");
      out.write("\tconsole.log(erasedImg); // 이미지 url보낼것 여기선 자바 절대 경로;\r\n");
      out.write("\t$('#basic_image_erasedImg').attr('src', erasedImg); //TODO\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("//이미지 업로드 후 화면에 보이게 하기\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("document.addEventListener('DOMContentLoaded', function () {\r\n");
      out.write("\t  const canvas = new fabric.Canvas('main-canvas');\t  \r\n");
      out.write("\t  const ctx = canvas.getContext(\"2d\");\r\n");
      out.write("\t  var imageContainer = document.getElementById('image-container');\r\n");
      out.write("\t  var uploadInput = document.getElementById('image-upload');\r\n");
      out.write("\t  var propertiesPanel = document.getElementById('properties-panel'); // 편집 옵션을 담은 패널의 ID\r\n");
      out.write("\t  var photoButton = document.getElementById('photo-button');\r\n");
      out.write("\t  var backgroundButton = document.getElementById('background-button');\r\n");
      out.write("\t  var bgContainer = document.getElementById('bg-container');\r\n");
      out.write("\t  var bgUploadInput = document.getElementById('background-upload');\r\n");
      out.write("\t  var isDrawingMode = false;\r\n");
      out.write("\t  var undoStack = [];\r\n");
      out.write("\t  var redoStack = [];\r\n");
      out.write("\t  var prevButton = document.getElementById('prev-button');\r\n");
      out.write("\t  var nextButton = document.getElementById('next-button'); // 다음 버튼 요소 가져오기\r\n");
      out.write("\t  var textButton = document.getElementById('text-button'); // 텍스트 버튼 요소 가져오기\r\n");
      out.write("\t  var isTextMode = false; // 텍스트 모드 상태 변수\r\n");
      out.write("\t  var activeText = null;\r\n");
      out.write("\t  \r\n");
      out.write("\t  // 지우개\r\n");
      out.write("\t  const erase = document.getElementById(\"jsErase\");\r\n");
      out.write("\t  const erase_range = document.getElementById(\"jsRange\");\r\n");
      out.write("\t  \r\n");
      out.write("\t\r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t// 텍스트 도구 활성화 함수\r\n");
      out.write("\t  function enableTextMode() {\r\n");
      out.write("\t      isTextMode = true;\r\n");
      out.write("\t      canvas.discardActiveObject(); // 선택된 객체 취소\r\n");
      out.write("\t      canvas.requestRenderAll();\r\n");
      out.write("\t      activeText = null; // 새로운 텍스트 상자 생성을 위해 activeText 초기화\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\t  // 텍스트 버튼 클릭 이벤트 핸들러\r\n");
      out.write("\t  textButton.addEventListener('click', function () {\r\n");
      out.write("\t      enableTextMode();\r\n");
      out.write("\t  });\r\n");
      out.write("\r\n");
      out.write("\t  // 캔버스 클릭 이벤트 핸들러\r\n");
      out.write("\t  canvas.on('mouse:down', function (options) {\r\n");
      out.write("    if (isTextMode) {\r\n");
      out.write("        var pointer = canvas.getPointer(options.e);\r\n");
      out.write("        if (!activeText) {\r\n");
      out.write("            // 활성화된 텍스트 상자가 없을 때만 새로운 텍스트 상자 생성\r\n");
      out.write("            activeText = new fabric.Textbox('텍스트 입력', {\r\n");
      out.write("                left: pointer.x,\r\n");
      out.write("                top: pointer.y,\r\n");
      out.write("                fontFamily: 'Arial',\r\n");
      out.write("                fill: 'black',\r\n");
      out.write("            });\r\n");
      out.write("            canvas.add(activeText);\r\n");
      out.write("            canvas.setActiveObject(activeText);\r\n");
      out.write("            canvas.requestRenderAll();\r\n");
      out.write("        }\r\n");
      out.write("    } else {\r\n");
      out.write("        // 텍스트 모드가 아닐 때, 다른 작업 수행\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 텍스트 모드 비활성화\r\n");
      out.write("    disableTextMode();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\t  // 텍스트 입력 모드 비활성화 함수\r\n");
      out.write("\t  function disableTextMode() {\r\n");
      out.write("\t      isTextMode = false;\r\n");
      out.write("\t      activeText = null; // 활성화된 텍스트 상자 초기화\r\n");
      out.write("\t  }\r\n");
      out.write("\r\n");
      out.write("\t  // 캔버스 클릭 이벤트 핸들러: 텍스트 모드 비활성화\r\n");
      out.write("\t  canvas.on('mouse:down', function () {\r\n");
      out.write("\t      disableTextMode();\r\n");
      out.write("\t  });\r\n");
      out.write("\t      \r\n");
      out.write("/* \t// 글꼴 선택란 엘리먼트와 텍스트를 변경할 엘리먼트를 가져옵니다.\r\n");
      out.write("\t  const fontSelect = document.getElementById('font-family');\r\n");
      out.write("\r\n");
      out.write("\t  // 글꼴 선택란의 변경 이벤트를 감지합니다.\r\n");
      out.write("\t  fontSelect.addEventListener('change', function () {\r\n");
      out.write("\t      if (isTextMode && activeText) {\r\n");
      out.write("\t          // 선택한 글꼴 값을 가져옵니다.\r\n");
      out.write("\t          const selectedFont = fontSelect.value;\r\n");
      out.write("\r\n");
      out.write("\t          // 활성화된 텍스트 상자에 선택한 글꼴을 적용합니다.\r\n");
      out.write("\t          activeText.set({ fontFamily: selectedFont });\r\n");
      out.write("\t          canvas.requestRenderAll();\r\n");
      out.write("\t      }\r\n");
      out.write("\t  }); */\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t  \r\n");
      out.write("\t// 사용자 정의 이미지 클릭 이벤트 핸들러\r\n");
      out.write("\t  document.getElementById('photo-upload-button').addEventListener('click', function () {\r\n");
      out.write("\t      // 파일 업로드 버튼 클릭\r\n");
      out.write("\t      document.getElementById('image-upload').click();\r\n");
      out.write("\t  });\r\n");
      out.write("\t  document.getElementById('bg-upload-button').addEventListener('click', function () {\r\n");
      out.write("\t      // 파일 업로드 버튼 클릭\r\n");
      out.write("\t      document.getElementById('background-upload').click();\r\n");
      out.write("\t  });\r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  // 이미지를 Canvas에 추가하는 함수\r\n");
      out.write("\t  function addImageToCanvas(imgElement) {\r\n");
      out.write("\t    fabric.Image.fromURL(imgElement.src, function (oImg) {\r\n");
      out.write("\t      canvas.add(oImg).renderAll();\r\n");
      out.write("\t      // 이미지를 선택하면 편집 옵션 패널을 표시\r\n");
      out.write("\t      propertiesPanel.style.display = 'block';\r\n");
      out.write("\t      // 선택된 객체의 속성을 패널에 표시할 수 있습니다.\r\n");
      out.write("\t      // 예: propertiesPanel.querySelector('.width').textContent = oImg.getScaledWidth();\r\n");
      out.write("\t    });\r\n");
      out.write("\t  }\r\n");
      out.write("\t\t//배경이미지로 추가하는 함수\r\n");
      out.write("\t\tfunction setCanvasBackground(imgElement) {\r\n");
      out.write("\t\t\tvar img = new Image();\r\n");
      out.write("\t\t    img.src = imgElement.src;\r\n");
      out.write("\r\n");
      out.write("\t\t    img.onload = function () {\r\n");
      out.write("\t\t        canvas.setBackgroundImage(imgElement.src, canvas.renderAll.bind(canvas), {\r\n");
      out.write("\t\t            scaleX: canvas.width / img.width,\r\n");
      out.write("\t\t            scaleY: canvas.height / img.height,\r\n");
      out.write("\t\t            top: 0,\r\n");
      out.write("\t\t            left: 0\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t    };\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 이전으로 돌아가는 함수\r\n");
      out.write("\t\tfunction undo() {\r\n");
      out.write("\t\t    if (undoStack.length > 0) {\r\n");
      out.write("\t\t        var previousState = undoStack.pop(); // 스택에서 이전 상태를 팝\r\n");
      out.write("\t\t        redoStack.push(JSON.stringify(canvas.toDatalessJSON())); // 현재 상태를 다음 행동 스택에 저장\r\n");
      out.write("\t\t        canvas.loadFromJSON(previousState); // 이전 상태로 canvas 복원\r\n");
      out.write("\t\t        canvas.renderAll(); // canvas 다시 그리기\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t    // 버튼 상태 업데이트\r\n");
      out.write("\t\t    updateButtonState();\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 다음으로 이동하는 함수\r\n");
      out.write("\t\tfunction redo() {\r\n");
      out.write("\t\t    if (redoStack.length > 0) {\r\n");
      out.write("\t\t        var nextState = redoStack.pop(); // 스택에서 다음 상태를 팝\r\n");
      out.write("\t\t        undoStack.push(JSON.stringify(canvas.toDatalessJSON())); // 현재 상태를 이전 행동 스택에 저장\r\n");
      out.write("\t\t        canvas.loadFromJSON(nextState); // 다음 상태로 canvas 복원\r\n");
      out.write("\t\t        canvas.renderAll(); // canvas 다시 그리기\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t    // 버튼 상태 업데이트\r\n");
      out.write("\t\t    updateButtonState();\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t  \r\n");
      out.write("\t\tbgContainer.addEventListener('click', function (e) {\r\n");
      out.write("\t\t    var clickedImage = e.target;\r\n");
      out.write("\t\t    // 클릭한 이미지를 canvas의 배경으로 설정\r\n");
      out.write("\t\t    setCanvasBackground(clickedImage);\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// 이미지를 Canvas에 추가하는 함수 (이미지 추가와 배경 설정을 분리)\r\n");
      out.write("\t\tfunction addImageToCanvas(imgElement) {\r\n");
      out.write("\t\t    fabric.Image.fromURL(imgElement.src, function (oImg) {\r\n");
      out.write("\t\t        canvas.add(oImg).renderAll();\r\n");
      out.write("\t\t        // 이미지를 선택하면 편집 옵션 패널을 표시\r\n");
      out.write("\t\t        propertiesPanel.style.display = 'block';\r\n");
      out.write("\t\t        // 선택된 객체의 속성을 패널에 표시할 수 있습니다.\r\n");
      out.write("\t\t        // 예: propertiesPanel.querySelector('.width').textContent = oImg.getScaledWidth();\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t  uploadInput.addEventListener('change', function (e) {\r\n");
      out.write("\t    var files = e.target.files;\r\n");
      out.write("\t   \r\n");
      out.write("\r\n");
      out.write("\t    for (var i = 0; i < files.length; i++) {\r\n");
      out.write("\t      (function (file) {\r\n");
      out.write("\t        var reader = new FileReader();\r\n");
      out.write("\t        reader.onload = function (e) {\r\n");
      out.write("\t          var img = new Image();\r\n");
      out.write("\t          img.src = e.target.result;\r\n");
      out.write("\t          img.style.maxHeight = '100px';\r\n");
      out.write("\t          img.onclick = function () {\r\n");
      out.write("\t            // 이미지 클릭 시 Canvas에 추가\r\n");
      out.write("\t            addImageToCanvas(img);\r\n");
      out.write("\t          };\r\n");
      out.write("\t          imageContainer.appendChild(img);\r\n");
      out.write("\t        };\r\n");
      out.write("\t        reader.readAsDataURL(file);\r\n");
      out.write("\t      })(files[i]);\r\n");
      out.write("\t    }\r\n");
      out.write("\t  });\r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  bgUploadInput.addEventListener('change', function (e) {\r\n");
      out.write("\t\t    var files = e.target.files;\r\n");
      out.write("\r\n");
      out.write("\t\t    for (var i = 0; i < files.length; i++) {\r\n");
      out.write("\t\t      (function (file) {\r\n");
      out.write("\t\t        var reader = new FileReader();\r\n");
      out.write("\t\t        reader.onload = function (e) {\r\n");
      out.write("\t\t          var img = new Image();\r\n");
      out.write("\t\t          img.src = e.target.result;\r\n");
      out.write("\t\t          img.style.maxHeight = '100px';\r\n");
      out.write("\t\t          img.onclick = function () {\r\n");
      out.write("\t\t            // 이미지 클릭 시 Canvas에 추가\r\n");
      out.write("\t\t        \t setCanvasBackground(img);\r\n");
      out.write("\t\t          };\r\n");
      out.write("\t\t          bgContainer.appendChild(img);\r\n");
      out.write("\t\t        };\r\n");
      out.write("\t\t        reader.readAsDataURL(file);\r\n");
      out.write("\t\t      })(files[i]);\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t  \r\n");
      out.write("\t  function toggleDrawingMode() {\r\n");
      out.write("\t\t  isDrawingMode = !isDrawingMode;\r\n");
      out.write("\t\t  if (isDrawingMode) {\r\n");
      out.write("\t\t    // 그리기 모드가 활성화되면 마우스로 그림을 그릴 수 있도록 설정\r\n");
      out.write("\t\t    canvas.isDrawingMode = true;\r\n");
      out.write("\t\t  } else {\r\n");
      out.write("\t\t    // 그리기 모드가 비활성화되면 그리기 모드를 해제\r\n");
      out.write("\t\t    canvas.isDrawingMode = false;\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 그리기 버튼 클릭 이벤트 핸들러\r\n");
      out.write("\t\tdocument.getElementById('start-drawing-button').addEventListener('click', function () {\r\n");
      out.write("\t\t  toggleDrawingMode();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t  \r\n");
      out.write("\t\tdocument.getElementById('reset-button').addEventListener('click', function () {\r\n");
      out.write("\t\t    // 사용자에게 확인 메시지 표시\r\n");
      out.write("\t\t    var confirmReset = confirm(\"초기화하시겠습니까? 이 작업은 현재까지의 그림을 모두 지우고 새로 시작합니다.\");\r\n");
      out.write("\r\n");
      out.write("\t\t    // 사용자가 \"예\"를 선택한 경우에만 초기화 실행\r\n");
      out.write("\t\t    if (confirmReset) {\r\n");
      out.write("\t\t        // canvas를 완전히 비우기\r\n");
      out.write("\t\t        canvas.clear();\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t  \r\n");
      out.write("\t\t// 이전 버튼 클릭 이벤트 핸들러\r\n");
      out.write("\t\tprevButton.addEventListener('click', function () {\r\n");
      out.write("\t\t    undo();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t// 다음 버튼 클릭 이벤트 핸들러\r\n");
      out.write("\t\tnextButton.addEventListener('click', function () {\r\n");
      out.write("\t\t    redo();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t// canvas 상태를 스택에 저장하는 함수 (이전 상태 기록)\r\n");
      out.write("\t\tfunction saveCanvasState() {\r\n");
      out.write("\t\t    var currentState = JSON.stringify(canvas.toDatalessJSON()); // 현재 canvas 상태를 문자열로 저장\r\n");
      out.write("\t\t    undoStack.push(currentState); // 스택에 현재 상태 저장\r\n");
      out.write("\t\t    // 다음 행동 스택 비우기\r\n");
      out.write("\t\t    redoStack.length = 0;\r\n");
      out.write("\t\t    // 버튼 상태 업데이트\r\n");
      out.write("\t\t    updateButtonState();\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// canvas에 변화가 있을 때마다 상태를 스택에 저장\r\n");
      out.write("\t\tcanvas.on('object:modified', saveCanvasState);\r\n");
      out.write("\t\tcanvas.on('object:removed', saveCanvasState);\r\n");
      out.write("\r\n");
      out.write("\t\t// 초기 상태에서는 이전 버튼과 다음 버튼 비활성화\r\n");
      out.write("\t\tupdateButtonState();\r\n");
      out.write("\r\n");
      out.write("\t\t// 버튼 상태 업데이트 함수\r\n");
      out.write("\t\tfunction updateButtonState() {\r\n");
      out.write("\t\t    // 이전 버튼 비활성화 조건: undoStack이 비어 있을 때\r\n");
      out.write("\t\t    prevButton.disabled = undoStack.length === 0;\r\n");
      out.write("\t\t    // 다음 버튼 비활성화 조건: redoStack이 비어 있을 때\r\n");
      out.write("\t\t    nextButton.disabled = redoStack.length === 0;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  \r\n");
      out.write("\t  document.getElementById('save-jpg-button').onclick = function() {\r\n");
      out.write("\t\t    var dataURL = canvas.toDataURL({\r\n");
      out.write("\t\t      format: 'jpeg',\r\n");
      out.write("\t\t      quality: 0.8\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t    var link = document.createElement('a');\r\n");
      out.write("\t\t    link.download = 'canvas-image.jpg';\r\n");
      out.write("\t\t    link.href = dataURL;\r\n");
      out.write("\t\t    link.click();\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tdocument.getElementById('line-color').addEventListener('input', function (e) {\r\n");
      out.write("\t\t    lineColor = e.target.value;\r\n");
      out.write("\t\t    if (isDrawingMode) {\r\n");
      out.write("\t\t        canvas.freeDrawingBrush.color = lineColor; // 현재 선 색상 업데이트\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t// 선 두께 변경 이벤트 핸들러\r\n");
      out.write("\t\tdocument.getElementById('line-width').addEventListener('input', function (e) {\r\n");
      out.write("\t\t    lineWidth \t= parseInt(e.target.value, 10);\r\n");
      out.write("\t\t    if (isDrawingMode) {\r\n");
      out.write("\t\t        canvas.freeDrawingBrush.width = lineWidth; // 현재 선 두께 업데이트\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 그리기 버튼 클릭 시 세부 버튼 생성 (색상, 두께)\r\n");
      out.write("\t\t  document.getElementById('start-drawing-button').addEventListener('click', function() {\r\n");
      out.write("\t\t\t    var drawingOptions = new bootstrap.Collapse(document.getElementById('drawing-options'));\r\n");
      out.write("\t\t\t    drawingOptions.toggle();\r\n");
      out.write("\t\t\t  });\t \r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("// 지우개 버튼 이벤트 설정\r\n");
      out.write("\tdocument.getElementById('eraseBtn').addEventListener('click', function() {\r\n");
      out.write("  \tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 모달창 보이게 하기\r\n");
      out.write("document.getElementById('ai-edit__btn').addEventListener('click', function(){\r\n");
      out.write("\t$(\".imageEdit-modal__wrap\").css(\"display\",\"block\");\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//이미지 클릭 위치 찾기\r\n");
      out.write("function findPoint(event){\r\n");
      out.write("        clickX =event.offsetX;\r\n");
      out.write("        clickY =event.offsetY;\r\n");
      out.write("   \t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/blog/edit.jsp(8,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("cpath");
      // /WEB-INF/views/blog/edit.jsp(8,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/blog/edit.jsp(8,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
